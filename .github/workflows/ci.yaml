name: CI

on:
  push:
    branches:
      - '*' 
  pull_request:
    branches:
      - '*'
jobs:
  validate:
    name: validate
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
      GOPROXY: "https://proxy.golang.org"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.15'
          check-latest: true
          cache: true

      - name: Go Vet
        run: V=1 CI=1 make vet

      - name: Go Lint
        run: make lint

      - name: Dependencies
        run: scripts/validate/gomod.sh

  test:
    name: test
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.16'
          check-latest: true
          cache: true

      - name: Go Build
        run: V=1 make build

      - name: Get gotestsum
        run: go install gotest.tools/gotestsum@latest

      - name: Run Tests
        env:
          GOTEST: gotestsum -- -timeout=9m
          GOTESTSUM_JUNITFILE: output/unit/results.xml
          GODEBUG: cgocheck=2
        run: |
          mkdir -p output/unit
          V=1 make test envtest

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "output/**/*.xml"

  e2e:
    name: e2e
    runs-on: ubuntu-latest
    needs: [test, validate]
    env:
      GO111MODULE: "on"
      MINIKUBE_VERSION: v1.16.0
      KUBERNETES_VERSION: v1.20.1
      CHANGE_MINIKUBE_NONE_USER: true
      MINIKUBE_WANTUPDATENOTIFICATION: false
      MINIKUBE_WANTREPORTERRORPROMPT: false
      SKAFFOLD_VERSION: v1.17.2
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.16'
          check-latest: true
          cache: true
      
      - name: Setup Minikube
        uses: medyagh/setup-minikube@v0.0.8
        with:
          minikube-version: ${{ env.MINIKUBE_VERSION }}
          kubernetes-version: ${{ env.KUBERNETES_VERSION }}
          driver: none
          cpus: 2
          memory: 2048m
          
      - name: Setup Skaffold
        run: |
          curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/${SKAFFOLD_VERSION}/skaffold-linux-amd64
          chmod +x skaffold
          sudo mv skaffold /usr/local/bin/

      - name: Run e2e
        env:
          GOTEST: gotestsum --
        run: |
          mkdir -p output/e2e
          export GOTESTSUM_JUNITFILE="$(pwd)/output/e2e/results.xml"
          export PATH="${GOPATH}/bin:${PATH}"
          go install gotest.tools/gotestsum@latest
          make e2e

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "output/**/*.xml"

      - name: Collect logs on vkubelet-mock-0 failure
        run: |
          kubectl logs vkubelet-mock-0
        if: failure
